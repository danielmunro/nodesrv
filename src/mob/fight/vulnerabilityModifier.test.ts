import {Vulnerability} from "../enum/vulnerability"
import vulnerabilityModifier from "./vulnerabilityModifier"

const initialAmount = 10
const initialModifier = 1

function calculateAmount(modifierAmount: number) {
  if (modifierAmount < 0) {
    return 0
  }
  return initialAmount * (initialModifier + modifierAmount)
}

describe("vulnerability modifier", () => {
  it("sanity checks", () => {
    const veryVulnerable = vulnerabilityModifier(Vulnerability.VeryVulnerable)
    const vulnerable = vulnerabilityModifier(Vulnerability.Vulnerable)
    const resist = vulnerabilityModifier(Vulnerability.Resist)
    const strongResist = vulnerabilityModifier(Vulnerability.StrongResist)
    const invulnerable = vulnerabilityModifier(Vulnerability.Invulnerable)

    expect(calculateAmount(veryVulnerable)).toBeGreaterThan(initialAmount)
    expect(calculateAmount(vulnerable)).toBeGreaterThan(initialAmount)
    expect(calculateAmount(resist)).toBeLessThan(initialAmount)
    expect(calculateAmount(strongResist)).toBeLessThan(initialAmount)
    expect(calculateAmount(invulnerable)).toBe(0)
    expect(calculateAmount(vulnerabilityModifier(Vulnerability.None))).toBe(initialAmount)
  })
})
